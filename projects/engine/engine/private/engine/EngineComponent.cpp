
#include <engine/PreCompiledHeader.hpp>

#include <engine/EngineComponent.hpp>

#include <window/WindowComponent.hpp>



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bc::engine::EngineComponent * global_engine = nullptr;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bc::engine::EngineComponent::EngineComponent(
	const EngineComponentCreateInfo & create_info
) :
	create_info_copy( create_info )
{
	global_engine = this;

	auto window_component_create_info = window::WindowComponentCreateInfo {};
	window_component = MakeUniquePtr<window::WindowComponent>( window_component_create_info );
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bc::engine::EngineComponent::~EngineComponent()
{
	window_component = nullptr;

	global_engine = nullptr;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void bc::engine::EngineComponent::Run()
{
	window_component->Run();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bc::window::WindowComponent * bc::engine::EngineComponent::GetWindowComponent()
{
	return window_component.Get();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bc::engine::EngineComponent * bc::engine::GetEngine()
{
	return global_engine;
}

#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>

#include <core/containers/UniquePtr.hpp>

#include <engine/EngineComponentCreateInfo.hpp>
#include <engine/EngineComponentStartInfo.hpp>



namespace bc {

namespace window_manager { class WindowManagerComponent; }
namespace rhi { class RHIComponent; }

namespace engine {

struct EngineComponentStartInfo;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class BITCRAFTE_ENGINE_API EngineComponent
{
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	EngineComponent( const EngineComponentCreateInfo& create_info );

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	~EngineComponent();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Start( const EngineComponentStartInfo& engine_start_info );

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Run();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	auto GetWindowManagerComponent() -> window_manager::WindowManagerComponent*;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	auto GetRHIComponent() -> rhi::RHIComponent*;

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	EngineComponentCreateInfo										create_info_copy;

	UniquePtr<window_manager::WindowManagerComponent>				window_manager_component;
	UniquePtr<rhi::RHIComponent>									rhi_component;
};



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @brief
/// Get the global engine instance.
///
/// @return
/// The global engine instance.
auto GetEngine() -> EngineComponent*;



} // engine
} // bc

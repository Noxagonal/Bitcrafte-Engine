#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>

#include <window/window/WindowCreateInfo.hpp>

#include <window/event/WindowEvents.hpp>



namespace bc {
namespace window {



class WindowComponent;
class OSWindowSystem;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class BITCRAFTE_ENGINE_API Window
{
	friend class OSWindowSystem;

public:
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Window(
		WindowComponent									&	window_component,
		const WindowCreateInfo							&	window_create_info
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual ~Window();


	WindowEvents											events;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual bool											GetDecorated() = 0;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void											SetDecorated(
		bool												is_decorated
	) = 0;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual bool											GetResizeable() = 0;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void											SetResizeable(
		bool												is_resizeable
	) = 0;

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// @brief
	/// Called by the window component when it updates all windows, please do not call manually.
	virtual void											Update()			= 0;

protected:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	WindowComponent										&	window_component;

	WindowCreateInfo										window_create_info_copy;
};



} // window
} // bc

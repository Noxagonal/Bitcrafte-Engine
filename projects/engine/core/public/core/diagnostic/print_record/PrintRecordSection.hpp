#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>
#include <core/diagnostic/print_record/PrintRecordTheme.hpp>
#include <core/memory/pod_auto_buffer/PODAutoBuffer.hpp>
#include <core/memory/MemoryRange.hpp>



namespace bc {
namespace diagnostic {

class PrintRecord;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class BITCRAFTE_ENGINE_API PrintRecordSection
{
	friend class PrintRecord;

public:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	PrintRecordSection() noexcept = default;
	PrintRecordSection( const PrintRecordSection& other ) noexcept;
	PrintRecordSection( PrintRecordSection&& other ) noexcept;
	~PrintRecordSection() noexcept;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	auto operator=( const PrintRecordSection& other ) noexcept -> PrintRecordSection&;
	auto operator=( PrintRecordSection&& other ) noexcept -> PrintRecordSection&;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void SetMessage( const PrintRecordSection& other ) noexcept;
	void SetMessage( const c32 * other_message_string, i64 other_size ) noexcept;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void AppendMessage( const PrintRecordSection& other ) noexcept;
	void AppendMessage( const c32 * other_message_string, i64 other_size ) noexcept;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	auto GetTheme() const noexcept -> PrintRecordTheme;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void SetTheme( PrintRecordTheme new_theme ) noexcept;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	auto GetMessage() const noexcept -> memory::MemoryRange<c32>;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Clear() noexcept;

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Copy( const PrintRecordSection& other ) noexcept;
	void Swap( PrintRecordSection& other ) noexcept;

	PrintRecordTheme			theme		= PrintRecordTheme::DEFAULT;
	i32							indent		= {};
	memory::PODAutoBuffer<c32>	message		= {};
};



} // diagnostic
} // bc

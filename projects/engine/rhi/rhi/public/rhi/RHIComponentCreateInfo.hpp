#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>

#include <core/utility/version/Version.hpp>
#include <core/containers/Text.hpp>



namespace bc {
namespace rhi {



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
enum class RHISelection : u32
{
	NONE			= 0,	///< Dummy device, may be used for testing.
	VULKAN,					///< Use Vulkan API.
	METAL,					///< Use Apple Metal API.
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
enum class RHIDebugLevel : u32
{
	VERBOSE,
	INFO,
	WARNING,
	ERROR,
};



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct RHIComponentCreateInfo
{
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// @brief
	/// RHI backend to use.
	RHISelection										rhi_selection					= {};

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// @brief
	/// Name of the game or application.
	Text32												application_name				= {};

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// @brief
	/// Version of the game or application.
	utility::Version									application_version				= {};

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// @brief
	/// Allow debugging of the RHI at runtime.
	bool												enable_debug					= {};

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// @brief
	/// Set RHI debug level, how much information is reported by the rhi.
	///
	/// Setting this to VERBOSE will show everything, setting this to WARNING will only show warnings and errors, setting this to
	/// ERROR will only show errors.
	RHIDebugLevel										minimum_debug_level				= {};
};



} // rhi
} // bc

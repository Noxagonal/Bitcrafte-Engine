#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>

#include <rhi_vulkan/vk/swapchain/VulkanSwapchainCreateInfo.hpp>



namespace bc {
namespace rhi {



class RHIVulkanImpl;
class VulkanWindowSurface;
class VulkanSwapchain;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class VulkanSwapchain
{
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	VulkanSwapchain(
		RHIVulkanImpl								&	rhi_vulkan_impl,
		VulkanWindowSurface							&	window_surface,
		const VulkanSwapchainCreateInfo				&	swapchain_create_info,
		VulkanSwapchain								*	old_swapchain
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	~VulkanSwapchain();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	VkSwapchainKHR										GetVkSwapchain() { return vk_swapchain; }

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	inline explicit operator VkSwapchainKHR() { return vk_swapchain; }

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	VkSwapchainKHR										vk_swapchain						= VK_NULL_HANDLE;
	RHIVulkanImpl									&	rhi_vulkan_impl;

	List<VkImage>										swapchain_vk_image_list;
};



} // rhi
} // bc

#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>
#include <rhi/RHIComponent.hpp>

#include <core/containers/UniquePtr.hpp>
#include <core/utility/version/Version.hpp>



namespace bc {
namespace rhi {



class VulkanImplementation;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class RHIVulkanComponent : public RHIComponent
{
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	RHIVulkanComponent(
		const RHIComponentCreateInfo						&	create_info
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual ~RHIVulkanComponent() override;

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	static UniquePtr<VulkanImplementation>						CreateVulkanImplementation(
		const RHIComponentCreateInfo						&	create_info
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	UniquePtr<VulkanImplementation>								implementation;
};



} // rhi
} // bc

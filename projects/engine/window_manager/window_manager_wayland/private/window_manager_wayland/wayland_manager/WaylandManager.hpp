#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>

#include <window_manager_wayland/window/WaylandWindow.hpp>

#include <core/containers/List.hpp>
#include <core/containers/UniquePtr.hpp>

#include <core/platform/linux/Linux.hpp>



namespace bc {
namespace window_manager {



struct WindowManagerComponentCreateInfo;
class WindowManagerWaylandComponent;
class WaylandWindow;

struct WindowCreateInfo;
class Window;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class WaylandManager
{
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	WaylandManager(
		WindowManagerWaylandComponent							&	window_manager_wayland_component,
		const WindowManagerComponentCreateInfo					&	window_manager_component_create_info
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	~WaylandManager();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void															Run();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	UniquePtr<Window>												CreateWindow(
		const WindowCreateInfo									&	window_create_info
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void															NotifyWindowBeingDestroyed(
		WaylandWindow											*	window_ptr
	);

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void															ProcessMessages();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	WindowManagerWaylandComponent								&	window_manager_wayland_component;

	List<WaylandWindow*>											active_window_list;
};



} // window_manager
} // bc

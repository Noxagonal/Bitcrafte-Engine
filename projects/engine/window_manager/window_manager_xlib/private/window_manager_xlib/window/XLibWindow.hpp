#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>
#include <window_manager/window/Window.hpp>
#include <window_manager/platform/handles/WindowPlatformHandles.hpp>



namespace bc {
namespace window_manager {



class XLibManager;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class XLibWindow : public Window
{
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	XLibWindow(
		XLibManager&				xlib_manager,
		const WindowCreateInfo&		window_create_info
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual ~XLibWindow() override;

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void CleanupHandles();

public:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual auto GetDecorated() const -> bool override;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void SetDecorated( bool is_decorated ) override;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual auto GetResizeable() -> bool override;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void SetResizeable( bool is_resizeable ) override;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Update();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual auto GetPlatformSpecificHandles() const -> const WindowManagerPlatformHandlesBase* override;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	auto GetXLibPlatformHandles() const -> const WindowManagerXLibPlatformHandles*;

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void SetupProperties();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	XLibManager&						xlib_manager;

	WindowManagerXLibPlatformHandles	platform_handles	= {};
};



} // window_manager
} // bc

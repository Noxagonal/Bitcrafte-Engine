#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>
#include <window_manager/window/Window.hpp>
#include <window_manager/platform/handles/WindowPlatformHandles.hpp>

#include <core/platform/windows/Windows.hpp>



namespace bc {
namespace window_manager {



class Win32Manager;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Win32Window : public Window
{
public:

	friend LRESULT CALLBACK WndProc(
		HWND		window_handle,
		UINT		message,
		WPARAM		w_param,
		LPARAM		l_param
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	struct RuntimeInfo
	{
		bool			is_fullscreen			= false;
		bool			is_mouse_over_window	= false;
		WindowState		current_windows_state	= WindowState::WINDOWED;
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Win32Window(
		Win32Manager&				win32_manager,
		const WindowCreateInfo&		window_create_info
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual ~Win32Window() override;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual auto GetDecorated() const -> bool override;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void SetDecorated( bool is_decorated ) override;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual auto GetResizeable() const -> bool override;
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void SetResizeable( bool is_resizeable ) override;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Update();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual auto GetPlatformSpecificHandles() const -> const WindowManagerPlatformHandlesBase* override;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	auto MakeWindowStyleFromSettings( const Settings& from_settings ) const -> DWORD;

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Win32Manager&						win32_manager;

	WindowManagerWin32PlatformHandles	platform_handles	= {};

	DWORD								style				= {};
};



} // window_manager
} // bc

#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>

#include <window_manager_win32/window/Win32Window.hpp>

#include <core/containers/List.hpp>
#include <core/containers/UniquePtr.hpp>

#include <core/platform/windows/Windows.hpp>



namespace bc {
namespace window_manager {



struct WindowManagerComponentCreateInfo;
class WindowManagerWin32Component;
class Win32Window;

struct WindowCreateInfo;
class Window;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Win32Manager
{
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	Win32Manager(
		WindowManagerWin32Component&				window_manager_win32_component,
		const WindowManagerComponentCreateInfo&		window_manager_component_create_info
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	~Win32Manager();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void Run();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	auto CreateWindow( const WindowCreateInfo& window_create_info ) -> UniquePtr<Window>;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void NotifyWindowBeingDestroyed( Win32Window* window_ptr );

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	inline auto GetPlatformSpecificHandles() const -> const WindowManagerWin32PlatformHandles* { return &platform_handles; }

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	inline auto GetWindowClass() const -> const WNDCLASSW& { return window_class; }

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	void ProcessMessages();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	WindowManagerWin32Component&		window_manager_win32_component;

	Text16								window_class_name					= "BitCrafteEngineWindowClass";
	WNDCLASSW							window_class						= {};

	List<Win32Window*>					active_window_list;

	WindowManagerWin32PlatformHandles	platform_handles = {};
};



} // window_manager
} // bc

#pragma once

#include <build_configuration/BuildConfigurationComponent.hpp>

#include <core/containers/UniquePtr.hpp>

#include <window_manager/WindowManagerComponent.hpp>



namespace bc {
namespace window_manager {



class Win32Manager;
class Window;
struct WindowCreateInfo;



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class WindowManagerWin32Component : public WindowManagerComponent
{
	friend class Window;

public:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	WindowManagerWin32Component(
		const WindowManagerComponentCreateInfo				&	create_info
	);

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	~WindowManagerWin32Component();

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void												Run() override;

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual UniquePtr<Window>									CreateWindow(
		const WindowCreateInfo								&	window_create_info
	) override;

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	UniquePtr<Win32Manager>										win32_manager;
};



} // window
} // bc
